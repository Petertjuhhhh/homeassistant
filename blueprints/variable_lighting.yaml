blueprint:
  name: Variable Lighting
  description: Set brightness based on light intensity
  domain: automation
  input:
    light_sensor:
      name: Light Sensor
      description: This sensor will be synchronized with the light.
      selector:
        entity:
          domain: sensor
          device_class: illuminance
    target_brightness:
      name: Brightness
      description: The brightness to control
      selector:
        target:
          entity:
            domain: input_number
    minimum_lx:
      name: Minimum lx
      description: The minimum amount of lx when starting to decrease the intensity
      default: 20
      selector:
        number:
          min: 0
          max: 100000
    maximum_lx:
      name: Maximum lx
      description: The minimum amount of lx when starting to decrease the intensity
      default: 120
      selector:
        number:
          min: 0
          max: 100000
    maximum_brightness:
      name: Maximum brightness
      description: The maximum brightness
      default: 80
      selector:
        number:
          min: 0
          max: 100
    transition_time:
      name: Transition time
      description: The time it takes to go to the new brightness
      default: 5
      selector:
        number:
          min: 0
          max: 10
trigger:
  platform: state
  entity_id: !input light_sensor

action:
  - service: input_number.set_value
    data_template:
      entity_id: target_brightness
      value: >
        {% set sensor = states({{light_sensor}}) | float %}
        {% set max_brightness = maximum_brightness | float %}
        {% set max_lux = maximum_lx | float %}
        {% set min_lux = minimum_lx | float %}
        {% set percentage = ( max_brightness - ( max_brightness / (( max_lux - min_lux) / (sensor - min_lux + 0.001)))) | float %}

        {% if percentage > max_brightness %}
          {{ max_brightness }}
        {% elif percentage > 0 %}
          {{ percentage | round(0) }}
        {% else %}
          0
        {% endif %}
    